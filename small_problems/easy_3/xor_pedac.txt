The || operator returns a truthy value if either or both of its operands are truthy. If both operands are falsey, it returns a falsey value. The && operator returns a truthy value if both of its operands are truthy, and a falsey value if either operand is falsey. This works great until you need only one of two conditions to be truthy, the so-called exclusive or.

In this exercise, you will write a method named xor that takes two arguments, and returns true if exactly one of its arguments is truthy, false otherwise. Note that we are looking for a boolean result instead of a truthy/falsy value as returned by || and &&.

P  (Understand the Problem) +++++++++++++++++++++++
  Inputs:
    - two arguments

  Outputs: 
    - a Boolean

  Explicit Rules:
    - Method should return true if exactly one of its arguments is truthy
    - If zero or both arguments are truthy, return false

  Implicit Rules:
    - 

  Questions:
    - 

  Mental Model:
   
 
E (Examples & Test Cases)  +++++++++++++++++++++++

  xor?(5.even?, 4.even?) == true
  xor?(5.odd?, 4.odd?) == true
  xor?(5.odd?, 4.even?) == false
  xor?(5.even?, 4.odd?) == false

  xor?((3 > 5), (5 == 5)) == true

D (Data Structure)  +++++++++++++++++++++++


A (Algorithm)  +++++++++++++++++++++++
  1. Check the truthiness of the operators
  2. If the first operator evaluates to true and the second operator evaluates to false, OR the first operator evaluates to false and the second operator evaluates to true
    1. Return true
  3. Otherwise, return false

C (Code with Intent)  +++++++++++++++++++++++